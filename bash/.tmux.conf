# 256 colors for vim
set -g default-terminal "screen-256color"

# Start window numbering at 1
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Cycle panes with C-b C-b
unbind ^B
bind ^B select-pane -t :.+

# Reload config with a key
bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"

# Mouse works as expected
set-option -g mouse on

# Scrolling works as expected
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# split pane key mapping
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# swap windows
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Use the system clipboard
#set-option -g default-command "reattach-to-user-namespace -l bash"

# Clear the scrollback buffer
# bind -n C-k send-keys C-l \; clear-history

# Reset the buffer
# bind -n C-r send-keys -R \; clear-history

# smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# C-l is taken over by vim style pane navigation
bind C-l send-keys 'C-l'

bind P paste-buffer

# vim key bindings
set-window-option -g mode-keys vi
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection
bind-key -Tcopy-mode-vi Escape send -X cancel
unbind -Tcopy-mode-vi Enter

# set the border text
set -g pane-border-status bottom
set -g pane-border-format "#{pane_current_path}: #{pane_current_command}"

set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"
